% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getWaterfallImage.R
\name{getWaterfallImage}
\alias{getWaterfallImage}
\title{Get the waterfall PNG image}
\usage{
getWaterfallImage(server, testId, run = 1L, file = NULL,
  repeatView = FALSE, thumbnail = FALSE, chartType = c("waterfall",
  "connection"), colorByMime = FALSE, chartWidth = NULL, maxTime = NULL,
  wrequests = NULL, noCPU = FALSE, noBandwidth = FALSE,
  noEllipsis = FALSE, noLabels = FALSE, dryRun = FALSE, ...)
}
\arguments{
\item{server}{A WebPagetest server}

\item{testId}{test ID string}

\item{run}{an integer. Which run number on a multiple runs test. 
Defaults to 1L.}

\item{file}{Write the result returned to file. Defaults to NULL
= don't write to file}

\item{repeatView}{get the Repeat View (cached view) instead of default 
First View (primed cache). Defaults to FALSE}

\item{thumbnail}{logical. Get the thumbnail of actual image. Defaults to
FALSE}

\item{chartType}{Set the chart type: "waterfall" or "connection". Defaults
to "waterfall"}

\item{colorByMime}{logical. set chart coloring by MIME type. Defaults 
to FALSE.}

\item{chartWidth}{Integer. Set the chart image width in px (300-2000).
Defaults to 930.}

\item{maxTime}{Set maximum time in seconds. Default is NULL = automatic}

\item{wrequests}{string. Filter requests (e.g.:1,2,3,4-9,8). Defaults
to NULL = all}

\item{noCPU}{logical. Hide CPU utilization. Defaults to FALSE.}

\item{noBandwidth}{logical. Hide bandwidth utilization. Defaults to 
FALSE.}

\item{noEllipsis}{logical. Hide ellipsis (...) for missing items. 
Defaults to FALSE.}

\item{noLabels}{logical. Hide labels for requests (URL). Defaults to 
FALSE.}

\item{dryRun}{If TRUE just return the RESTful API URL. Defaults to 
FALSE}

\item{...}{Additonal function arguments}
}
\value{
If a file argument is given the PNG returned is written to 
   file. Else a raster is returned via \link[png]{readPNG}
}
\description{
get the waterfall PNG image
}
\examples{
\dontrun{
  WPT <- server()
  history <- getHistory(WPT, filter = "London")
  tID <- as.character(history[dim(history)[1], "Test ID"])
  har <- getWaterfallImage(WPT, tID)
}
}

