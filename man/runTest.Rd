% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runTest.R
\name{runTest}
\alias{runTest}
\title{Run test}
\usage{
runTest(server, urlOrScript, key = NULL, location, connectivity = NULL,
  runs = NULL, firstViewOnly = FALSE, video = FALSE, private = FALSE,
  label = NULL, stopAtDocumentComplete = FALSE, disableJavaScript = FALSE,
  clearCerts = FALSE, ignoreSSL = FALSE, disableCompatibilityView = FALSE,
  tcpDump = FALSE, saveResponseBodies = FALSE,
  keepOriginalUserAgent = FALSE, domElement = NULL,
  minimumDuration = NULL, tester = NULL, emulateMobile = FALSE,
  timeline = FALSE, timelineCallStack = NULL, chromeTrace = FALSE,
  netLog = FALSE, dataReduction = FALSE, userAgent = NULL,
  commandLine = NULL, login = NULL, password = NULL, sensitive = FALSE,
  disableHTTPHeaders = FALSE, block = NULL, spof = NULL,
  customMetrics = NULL, authenticationType = NULL, notifyEmail = NULL,
  pingback = NULL, bandwidthDown = NULL, bandwidthUp = NULL,
  latency = NULL, packetLossRate = NULL, disableOptimization = FALSE,
  disableScreenshot = FALSE, fullResolutionScreenshot = FALSE,
  jpegQuality = NULL, medianVideo = FALSE, htmlBody = FALSE,
  tsView = NULL, tsViewConfigs = NULL, affinity = NULL, priority = NULL,
  blockAds = FALSE, continuousVideoCapture = FALSE, forceSpdy3 = FALSE,
  forceSoftwareRendering = FALSE, requestId = NULL, breakDown = FALSE,
  domains = FALSE, pageSpeed = FALSE, requests = FALSE,
  medianMetric = NULL, medianRun = NULL, dryRun = TRUE, ...)
}
\arguments{
\item{server}{A WebPagetest server}

\item{urlOrScript}{URL or script string}

\item{key}{API key (if assigned). Contact the WebPageTest server 
administrator for a key if required}

\item{location}{location to test from}

\item{connectivity}{connectivity profile. One of
(Cable|DSL|FIOS|Dial|3G|3GFast|Native|custom). Defaults to cable.}

\item{runs}{number of test runs. Defaults to NULL = 1L run}

\item{firstViewOnly}{skip the Repeat View test. Defaults to FALSE.}

\item{video}{capture video. Defaults to FALSE.}

\item{private}{keep the test hidden from the test log. Defaults to FALSE}

\item{label}{label for the test}

\item{stopAtDocumentComplete}{stop test at document complete. typically, tests run 
until all activity stops}

\item{disableJavaScript}{disable javascript (IE, Chrome, Firefox)}

\item{clearCerts}{clear SSL certificate caches}

\item{ignoreSSL}{ignore SSL certificate errors, e.g. name mismatch, 
self-signed certificates, etc}

\item{disableCompatibilityView}{forces all pages to load in standards 
mode (IE only)}

\item{tcpDump}{capture network packet trace (tcpdump)}

\item{saveResponseBodies}{save response bodies for text resources}

\item{keepOriginalUserAgent}{do not add PTST to the original browser 
User Agent string}

\item{domElement}{DOM element to record for sub-measurement}

\item{minimumDuration}{minimum test duration in seconds}

\item{tester}{run the test on a specific PC (name must match exactly or 
the test will not run)}

\item{emulateMobile}{(experimental) emulate mobile browser: Chrome 
mobile user agent, 640x960 screen, 2x scaling and fixed viewport 
(Chrome only)}

\item{timeline}{capture Developer Tools Timeline (Chrome only)}

\item{timelineCallStack}{set between 1-5 to include the JS call stack. 
must be used in conjunction with timeline (increases overhead) 
(Chrome only)}

\item{chromeTrace}{capture chrome trace (about://tracing) (Chrome only)}

\item{netLog}{capture Network Log (Chrome only)}

\item{dataReduction}{enable data reduction on Chrome 34+ Android 
(Chrome only)}

\item{userAgent}{custom user agent string (Chrome only)}

\item{commandLine}{use a list of custom command line switches 
(Chrome only)}

\item{login}{username for authenticating tests (http authentication)}

\item{password}{password for authenticating tests (http authentication)}

\item{sensitive}{discard script and http headers in the result}

\item{disableHTTPHeaders}{disable saving of the http headers (as well 
as browser status messages and CPU utilization)}

\item{block}{chracter vector of urls to block (substring match)}

\item{spof}{chracter vector of domains to simulate failure by 
re-routing to blackhole.webpagetest.org to silently drop all requests}

\item{customMetrics}{execute arbitrary javascript at the end of a test 
to collect custom metrics}

\item{authenticationType}{type of authentication: 0 = Basic, 1 = SNS [0]}

\item{notifyEmail}{e-mail address to notify with the test results}

\item{pingback}{URL to ping when the test is complete (the test ID will 
be passed as an "id" parameter)}

\item{bandwidthDown}{download bandwidth in Kbps (used when specifying a 
custom connectivity profile)}

\item{bandwidthUp}{upload bandwidth in Kbps (used when specifying a 
custom connectivity profile)}

\item{latency}{first-hop Round Trip Time in ms (used when specifying a 
custom connectivity profile)}

\item{packetLossRate}{packet loss rate - percent of packets to drop 
(used when specifying a custom connectivity profile)}

\item{disableOptimization}{disable optimization checks (for faster 
testing)}

\item{disableScreenshot}{disable screen shot capturing}

\item{fullResolutionScreenshot}{save a full-resolution version of the 
fully loaded screen shot as a PNG}

\item{jpegQuality}{jpeg compression level (30-100) for the screen shots 
and video capture}

\item{medianVideo}{store the video from the median run when capturing 
video is enabled}

\item{htmlBody}{save the content of only the base HTML response}

\item{tsView}{test name to use when submitting results to tsviewdb (for 
private instances that have integrated with tsviewdb)}

\item{tsViewConfigs}{configs to use when submitting results to tsviewdb 
(for private instances that have integrated with tsviewdb)}

\item{affinity}{string to hash test to a specific test agent. tester 
will be picked by index among available testers}

\item{priority}{change test priority (0-9) [enforced by API key, 
otherwise 5]}

\item{blockAds}{block ads defined by adblockrules.org}

\item{continuousVideoCapture}{capture video continuously 
(unstable/experimental, may cause tests to fail)}

\item{forceSpdy3}{force SPDY version 3 (Chrome only)}

\item{forceSoftwareRendering}{force software rendering, disable GPU 
acceleration (Chrome only)}

\item{requestId}{request ID, useful to track asynchronous requests}

\item{breakDown}{include the breakdown of requests and bytes by mime 
type. Defaults to NULL = FALSE}

\item{domains}{include the breakdown of requests and bytes by domain.
Defaults to NULL = FALSE}

\item{pageSpeed}{logical value include the PageSpeed score in the 
response (may be slower). Defaults to NULL = FALSE}

\item{requests}{include the request data in the response (slower and 
results in much larger responses). Defaults to NULL = FALSE}

\item{medianMetric}{A string. Set the metric used to calculate median 
for multiple runs tests. Defaults to "loadTime" = NULL. Other options 
include "visualComplete", "SpeedIndex", "titleTime", "domTime", 
"docTime",  "fullyLoaded", "render", "TTFB"}

\item{medianRun}{set the run used for median for multiple runs tests. 
Defaults to "median = NULL. Other acceptable values include 
"fastest".}

\item{dryRun}{If TRUE just return the RESTful API URL. Defaults to 
FALSE}

\item{...}{Additonal function arguments}
}
\value{
a list of results
}
\description{
Run test
}
\examples{
\dontrun{
  WPT <- server()
  har <- getHARData(WPT, location = "someLoc")
}
}

